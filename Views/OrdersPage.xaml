<Page x:Class="hci_restaurant.Views.OrdersPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:viewModel="clr-namespace:hci_restaurant.ViewModels"
      mc:Ignorable="d" 
        MinHeight="600" MinWidth="1044">

    <Page.DataContext>
        <viewModel:OrdersViewModel/>
    </Page.DataContext>

    <Border Background="{DynamicResource Background}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="AddNewItem" Grid.Column="0" Content="{DynamicResource AddOrder}" Foreground="{DynamicResource Text}" HorizontalAlignment="Left"
                FontSize="12" FontFamily="{DynamicResource MyFont}" Margin="50,0,0,0" Height="40" Width="120" Command="{Binding AddOrderCommand}">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="{DynamicResource Button}"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource MouseOverButton}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>

                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <ComboBox x:Name="Users" Grid.Column="0" Margin="190,0,0,0" Height="40" Width="120" HorizontalAlignment="Left" 
                          FontFamily="{DynamicResource MyFont}" FontSize="12" HorizontalContentAlignment="Center" 
                          VerticalContentAlignment="Center" ItemsSource="{Binding Users}" SelectedItem="{Binding SelectedUser}"/>

                    <TextBox x:Name="UsernameBox" Grid.Column="1" FontSize="13" FontFamily="{DynamicResource MyFont}" Foreground="{DynamicResource BackgroundText}" 
                         HorizontalAlignment="Right" Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}" Width="300" Margin="0,0,50,0"
                         Background="Transparent" BorderBrush="{DynamicResource BackgroundText}" BorderThickness="0,0,0,2" 
                         Height="28" VerticalContentAlignment="Center">

                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding FilterCommand}"/>
                        </TextBox.InputBindings>
                    </TextBox>
                </Grid>
            </Border>

            <Border Grid.Row="1">
                <DataGrid x:Name="UsersDataGrid" Background="Transparent" MinWidth="951" HorizontalAlignment="Stretch" Margin="50,5,50,35" Height="auto" Width="auto" 
              BorderThickness="1" ItemsSource="{Binding Orders}" AutoGenerateColumns="False" IsReadOnly="True" CanUserAddRows="False" SelectedIndex="-1"
              HeadersVisibility="Column" SelectionUnit="FullRow" BorderBrush="Transparent">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{DynamicResource Id}" Binding="{Binding Id}" Width="*"/>
                        <DataGridTextColumn Header="{DynamicResource Created}" Binding="{Binding Created}" Width="*"/>
                        <DataGridTextColumn Header="{DynamicResource Table}" Binding="{Binding TableId}" Width="*"/>
                        <DataGridTemplateColumn Header="#" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Width="auto" Height="auto">
                                        <Button x:Name="EditItem" Height="auto" Width="auto" Background="Transparent" HorizontalAlignment="Center" BorderBrush="Transparent"
                                    BorderThickness="0" Command="{Binding DataContext.ShowDetailsCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    CommandParameter="{Binding}">
                                            <Image Source="../Resources/Images/details.png"/>
                                        </Button>
                                        <Button x:Name="DeleteItem" Height="auto" Width="auto" Background="Transparent" HorizontalAlignment="Center" BorderBrush="Transparent"
                                    BorderThickness="0" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    CommandParameter="{Binding}">
                                            <Image Source="../Resources/Images/delete.png"/>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>

                    <DataGrid.Resources>
                        <Style TargetType="DataGrid">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="FontFamily" Value="{DynamicResource MyFont}"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Background" Value="{DynamicResource TableBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundText}"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                            <Setter Property="FontFamily" Value="{DynamicResource MyFont}"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Background" Value="{DynamicResource TableBackground}"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundText}"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background" Value="{DynamicResource TableBackground}"/>
                            <Setter Property="FontFamily" Value="{DynamicResource MyFont}"/>
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundText}"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGrid.CellStyle>

                    <DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Setter Property="Focusable" Value="True"/>
                            <Setter Property="IsEnabled" Value="True"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </Style>
                    </DataGrid.RowStyle>
                </DataGrid>
            </Border>
        </Grid>
    </Border>
</Page>
